{"ast":null,"code":"var _jsxFileName = \"/Users/swethagopikumar/Documents/UniMelB/sem 1/Cluster and Cloud Computing/Assignment  2/tableau-react-jsapi-master/src/components/Events.js\";\nimport React from 'react';\nimport { saveAs } from 'file-saver';\nimport pdfMake from 'pdfmake/build/pdfmake';\nimport pdfFonts from 'pdfmake/build/vfs_fonts';\npdfMake.vfs = pdfFonts.pdfMake.vfs;\n\nfunction convertToPDF(file) {\n  var reader = new FileReader();\n\n  reader.onloadend = function () {\n    var arrayBuffer = this.result;\n    var typedArray = new Uint8Array(arrayBuffer);\n    var base64String = window.btoa(String.fromCharCode.apply(null, typedArray));\n    var docDefinition = {\n      content: [{\n        image: 'data:image/jpeg;base64,' + base64String\n      }]\n    };\n    var pdfDocGenerator = pdfMake.createPdf(docDefinition); // Create the PDF document generator\n\n    pdfDocGenerator.getBuffer(function (buffer) {\n      var pdfBlob = new Blob([buffer], {\n        type: 'application/pdf'\n      });\n      saveAs(pdfBlob, 'document.pdf'); // Trigger save as toolbox for the PDF file\n    });\n  };\n\n  reader.readAsArrayBuffer(file);\n}\n\nfunction events() {\n  var handleFileChange = function handleFileChange(event) {\n    var file = event.target.files[0];\n    convertToPDF(file);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"file\",\n    onChange: handleFileChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }));\n}\n\nexport default events;","map":{"version":3,"sources":["/Users/swethagopikumar/Documents/UniMelB/sem 1/Cluster and Cloud Computing/Assignment  2/tableau-react-jsapi-master/src/components/Events.js"],"names":["React","saveAs","pdfMake","pdfFonts","vfs","convertToPDF","file","reader","FileReader","onloadend","arrayBuffer","result","typedArray","Uint8Array","base64String","window","btoa","String","fromCharCode","apply","docDefinition","content","image","pdfDocGenerator","createPdf","getBuffer","buffer","pdfBlob","Blob","type","readAsArrayBuffer","events","handleFileChange","event","target","files"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,YAAvB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AAEAD,OAAO,CAACE,GAAR,GAAcD,QAAQ,CAACD,OAAT,CAAiBE,GAA/B;;AAEA,SAASC,YAAT,CAAsBC,IAAtB,EAA4B;AAC1B,MAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;;AAEAD,EAAAA,MAAM,CAACE,SAAP,GAAmB,YAAY;AAC7B,QAAMC,WAAW,GAAG,KAAKC,MAAzB;AACA,QAAMC,UAAU,GAAG,IAAIC,UAAJ,CAAeH,WAAf,CAAnB;AACA,QAAMI,YAAY,GAAGC,MAAM,CAACC,IAAP,CAAYC,MAAM,CAACC,YAAP,CAAoBC,KAApB,CAA0B,IAA1B,EAAgCP,UAAhC,CAAZ,CAArB;AAEA,QAAMQ,aAAa,GAAG;AACpBC,MAAAA,OAAO,EAAE,CACP;AAAEC,QAAAA,KAAK,EAAE,4BAA4BR;AAArC,OADO;AADW,KAAtB;AAMA,QAAMS,eAAe,GAAGrB,OAAO,CAACsB,SAAR,CAAkBJ,aAAlB,CAAxB,CAX6B,CAW6B;;AAC1DG,IAAAA,eAAe,CAACE,SAAhB,CAA0B,UAACC,MAAD,EAAY;AACpC,UAAMC,OAAO,GAAG,IAAIC,IAAJ,CAAS,CAACF,MAAD,CAAT,EAAmB;AAAEG,QAAAA,IAAI,EAAE;AAAR,OAAnB,CAAhB;AACA5B,MAAAA,MAAM,CAAC0B,OAAD,EAAU,cAAV,CAAN,CAFoC,CAEH;AAClC,KAHD;AAID,GAhBD;;AAkBApB,EAAAA,MAAM,CAACuB,iBAAP,CAAyBxB,IAAzB;AACD;;AAED,SAASyB,MAAT,GAAkB;AAChB,MAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,KAAD,EAAW;AAClC,QAAM3B,IAAI,GAAG2B,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAb;AACA9B,IAAAA,YAAY,CAACC,IAAD,CAAZ;AACD,GAHD;;AAKA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,QAAQ,EAAE0B,gBAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD;;AAED,eAAeD,MAAf","sourcesContent":["import React from 'react';\nimport { saveAs } from 'file-saver';\nimport pdfMake from 'pdfmake/build/pdfmake';\nimport pdfFonts from 'pdfmake/build/vfs_fonts';\n\npdfMake.vfs = pdfFonts.pdfMake.vfs;\n\nfunction convertToPDF(file) {\n  const reader = new FileReader();\n\n  reader.onloadend = function () {\n    const arrayBuffer = this.result;\n    const typedArray = new Uint8Array(arrayBuffer);\n    const base64String = window.btoa(String.fromCharCode.apply(null, typedArray));\n\n    const docDefinition = {\n      content: [\n        { image: 'data:image/jpeg;base64,' + base64String }\n      ]\n    };\n\n    const pdfDocGenerator = pdfMake.createPdf(docDefinition); // Create the PDF document generator\n    pdfDocGenerator.getBuffer((buffer) => {\n      const pdfBlob = new Blob([buffer], { type: 'application/pdf' });\n      saveAs(pdfBlob, 'document.pdf'); // Trigger save as toolbox for the PDF file\n    });\n  };\n\n  reader.readAsArrayBuffer(file);\n}\n\nfunction events() {\n  const handleFileChange = (event) => {\n    const file = event.target.files[0];\n    convertToPDF(file);\n  };\n\n  return (\n    <div>\n      <input type=\"file\" onChange={handleFileChange} />\n    </div>\n  );\n}\n\nexport default events;"]},"metadata":{},"sourceType":"module"}